name: OCR-X CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -r requirements.txt
        # pip install -e . # If project is set up as an installable package

    - name: Lint with Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-complexity=12 --max-line-length=119 --statistics # exit-zero removed for now

    - name: Check formatting with Black
      run: |
        black . --check --diff

    # - name: Type check with MyPy # Uncomment when types are more mature
    #   run: |
    #     mypy ocrx --ignore-missing-imports

    - name: Test with Pytest
      run: |
        pytest tests/unit --cov=ocrx --cov-report=xml --cov-report=term-missing -m "not slow"
        # Add -m "not slow" to skip long running tests in CI for PRs maybe

    # Placeholder for building the Docker image (optional for library, good for app)
    # - name: Build Docker image
    #   run: docker build . --file Dockerfile --tag ocrx-app:$(date +%s)
